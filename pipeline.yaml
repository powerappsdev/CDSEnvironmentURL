# Build the ColorPicker project utilizing npm and MSBuild
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
name: $(BuildVersionMajor).$(BuildVersionMinor).$(BuildVersionPatch).$(BuildVersionRevision)
 
trigger: none
  # branches:
  #   include:
  #   - master
  # paths:
  #   exclude:
  #   - *.md
  #   - *.yml
 
pr: none
 
variables:
  #BUILD VERSION INFORMATION
  BuildVersionMajor: 1
  BuildVersionMinor: 1
  BuildVersionPatch: 0
  #sets a counter for the version number changing the Major or Minor version will reset this counter
  #back to it's seed value  
  BuildVersionRevision: $[counter(format('{0}.{1}.{2}', variables['BuildVersionMajor'], variables['BuildVersionMinor'],variables['BuildVersionPatch']), 1)]
 
pool:
  vmImage: 'vs2017-win2016'
 
 
steps:
#Run npm install to get all required resources for the projectl
- task: Npm@1
  inputs:
    command: 'install'
    workingDir: './CDSEnvironmentUrl/'
 
#PowerApps controls can be build using MSBuild and do not require the PCF CLI to be downloaded.
#The build command will utilize NuGet to go out and get all the resource packages it needs.
- task: MSBuild@1
  inputs:
    solution: '**/*.cdsproj'
    msbuildArguments: '/t:build /p:Configuration=Release /restore'
 
#Copy the solution files to the build artifacts directory.
- task: CopyFiles@2
  inputs:
    SourceFolder: './CDSEnvironmentUrl/CDSEnvironmentUrlControl/bin/Release/'
    Contents: 'CDSEnvironmentUrlControl_managed.zip'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
 
#Publish the build artifacts.
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
 
#GitHub Release
- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'github.com_powerappsdev'
    repositoryName: 'powerappsdev/CDSEnvironmentURL'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'userSpecifiedTag'
    tag: '$(Build.BuildNumber)'
    title: '$(Build.BuildNumber)'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'